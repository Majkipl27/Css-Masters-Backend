generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Users {
  id           Int      @id @default(autoincrement())
  joinedAt     DateTime @default(now())
  email        String   @unique
  passwordHash String
  username     String   @unique
  isBanned     Boolean  @default(false)
  avatar       Bytes?
  banner       Bytes?
  instagram    String?
  website      String?
  github       String?
  x            String?
  description  String?
  name         String?
  lastname     String?
  scores       Scores[]
}

model Playlists {
  id                Int          @id @default(autoincrement())
  createdAt         DateTime     @default(now())
  updatedAt         DateTime     @updatedAt
  name              String
  image             String?
  additionalComment String?
  description       String?
  author            String       @default("CSS Masters")
  isOfficial        Boolean      @default(false)
  Challenges        Challenges[]
  difficulty        String?      @default("rookie")
}

model Challenges {
  id                    Int       @id @default(autoincrement())
  challengeInPlaylistId Int       @default(1)
  createdAt             DateTime  @default(now())
  updatedAt             DateTime  @updatedAt
  challangeImageUrl     String
  colors                String
  name                  String
  playlist              Playlists @relation(fields: [playlistId], references: [id])
  playlistId            Int
  startingScore         Int
  scores                Scores[]
  author                String    @default("CSS Masters")
}

model Scores {
  id          Int        @id @default(autoincrement())
  createdAt   DateTime   @default(now())
  score       Float
  user        Users      @relation(fields: [userId], references: [id])
  userId      Int
  challenge   Challenges @relation(fields: [challengeId], references: [id])
  challengeId Int
  code        String
}
